
serialServoControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000930  000009c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000930  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000206  00800100  00800100  000009c4  2**0
                  ALLOC
  3 .stab         000029b8  00000000  00000000  000009c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000b00  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00003e7c  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000068  00000000  00000000  00003eab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000005cf  00000000  00000000  00003f13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000230  00000000  00000000  000044e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000004f3  00000000  00000000  00004712  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a8  00000000  00000000  00004c08  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002bd  00000000  00000000  00004db0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008a9  00000000  00000000  0000506d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000078  00000000  00000000  00005916  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
   a:	00 00       	nop
   c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
   e:	00 00       	nop
  10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
  16:	00 00       	nop
  18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
  22:	00 00       	nop
  24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
  26:	00 00       	nop
  28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	51 c0       	rjmp	.+162    	; 0xd4 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c0       	rjmp	.+158    	; 0xd4 <__bad_interrupt>
  36:	00 00       	nop
  38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
  42:	00 00       	nop
  44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
  46:	00 00       	nop
  48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
  56:	00 00       	nop
  58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
  62:	00 00       	nop
  64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
  66:	00 00       	nop
  68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	95 c1       	rjmp	.+810    	; 0x39c <__vector_28>
  72:	00 00       	nop
  74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
  76:	00 00       	nop
  78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
  82:	00 00       	nop
  84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
  86:	00 00       	nop
  88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	07 2c       	mov	r0, r7
  8e:	7a a5       	ldd	r23, Y+42	; 0x2a
  90:	ba 6c       	ori	r27, 0xCA	; 202
  92:	c5 90       	lpm	r12, Z+
  94:	da 3b       	cpi	r29, 0xBA	; 186
  96:	93 65       	ori	r25, 0x53	; 83
  98:	fc 8b       	std	Y+20, r31	; 0x14
  9a:	bc 53       	subi	r27, 0x3C	; 60
  9c:	f8 10       	cpse	r15, r8
  9e:	fd 3c       	cpi	r31, 0xCD	; 205
  a0:	56 92       	lac	Z, r5
  a2:	83 4d       	sbci	r24, 0xD3	; 211
  a4:	bd 87       	std	Y+13, r27	; 0x0d
  a6:	9d 3a       	cpi	r25, 0xAD	; 173
  a8:	b6 3d       	cpi	r27, 0xD6	; 214
  aa:	cb c9       	rjmp	.-3178   	; 0xfffff442 <__eeprom_end+0xff7ef442>
  ac:	bf 5b       	subi	r27, 0xBF	; 191
  ae:	be 73       	andi	r27, 0x3E	; 62
  b0:	da 0f       	add	r29, r26
  b2:	c9 3f       	cpi	r28, 0xF9	; 249

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d0 e4       	ldi	r29, 0x40	; 64
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	23 e0       	ldi	r18, 0x03	; 3
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a6 30       	cpi	r26, 0x06	; 6
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	e6 d0       	rcall	.+460    	; 0x29e <main>
  d2:	2c c4       	rjmp	.+2136   	; 0x92c <_exit>

000000d4 <__bad_interrupt>:
  d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <initServoSerial>:
	gServoParameters[2] = (uint8_t)(minPosition>>8); //high byte
	gServoParameters[3] = (uint8_t)maxPosition;
	gServoParameters[4] = (uint8_t)(maxPosition>>8);
	
	sendServoPacket(ID, INST_WRITE, 5);	
}
  d6:	10 92 cd 00 	sts	0x00CD, r1
  da:	10 92 cc 00 	sts	0x00CC, r1
  de:	88 e9       	ldi	r24, 0x98	; 152
  e0:	80 93 c9 00 	sts	0x00C9, r24
  e4:	86 e0       	ldi	r24, 0x06	; 6
  e6:	80 93 ca 00 	sts	0x00CA, r24
  ea:	54 9a       	sbi	0x0a, 4	; 10
  ec:	08 95       	ret

000000ee <servoCheckTxReady>:
  ee:	80 91 c8 00 	lds	r24, 0x00C8
  f2:	80 72       	andi	r24, 0x20	; 32
  f4:	08 95       	ret

000000f6 <servolWriteByte>:
  f6:	cf 93       	push	r28
  f8:	c8 2f       	mov	r28, r24
  fa:	f9 df       	rcall	.-14     	; 0xee <servoCheckTxReady>
  fc:	88 23       	and	r24, r24
  fe:	e9 f3       	breq	.-6      	; 0xfa <servolWriteByte+0x4>
 100:	c0 93 ce 00 	sts	0x00CE, r28
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <sendServoPacket>:
 108:	0f 93       	push	r16
 10a:	1f 93       	push	r17
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	9f ef       	ldi	r25, 0xFF	; 255
 112:	90 93 06 02 	sts	0x0206, r25
 116:	90 93 07 02 	sts	0x0207, r25
 11a:	80 93 08 02 	sts	0x0208, r24
 11e:	84 2f       	mov	r24, r20
 120:	8e 5f       	subi	r24, 0xFE	; 254
 122:	80 93 09 02 	sts	0x0209, r24
 126:	60 93 0a 02 	sts	0x020A, r22
 12a:	44 23       	and	r20, r20
 12c:	c1 f1       	breq	.+112    	; 0x19e <sendServoPacket+0x96>
 12e:	e6 e8       	ldi	r30, 0x86	; 134
 130:	f2 e0       	ldi	r31, 0x02	; 2
 132:	ab e0       	ldi	r26, 0x0B	; 11
 134:	b2 e0       	ldi	r27, 0x02	; 2
 136:	83 50       	subi	r24, 0x03	; 3
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	89 57       	subi	r24, 0x79	; 121
 13c:	9d 4f       	sbci	r25, 0xFD	; 253
 13e:	21 91       	ld	r18, Z+
 140:	2d 93       	st	X+, r18
 142:	e8 17       	cp	r30, r24
 144:	f9 07       	cpc	r31, r25
 146:	d9 f7       	brne	.-10     	; 0x13e <sendServoPacket+0x36>
 148:	4a 5f       	subi	r20, 0xFA	; 250
 14a:	24 2f       	mov	r18, r20
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	31 09       	sbc	r19, r1
 152:	23 30       	cpi	r18, 0x03	; 3
 154:	31 05       	cpc	r19, r1
 156:	34 f5       	brge	.+76     	; 0x1a4 <sendServoPacket+0x9c>
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	0b c0       	rjmp	.+22     	; 0x176 <sendServoPacket+0x6e>
 160:	fc 01       	movw	r30, r24
 162:	ea 5f       	subi	r30, 0xFA	; 250
 164:	fd 4f       	sbci	r31, 0xFD	; 253
 166:	80 81       	ld	r24, Z
 168:	68 0f       	add	r22, r24
 16a:	5f 5f       	subi	r21, 0xFF	; 255
 16c:	85 2f       	mov	r24, r21
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	82 17       	cp	r24, r18
 172:	93 07       	cpc	r25, r19
 174:	ac f3       	brlt	.-22     	; 0x160 <sendServoPacket+0x58>
 176:	fc 01       	movw	r30, r24
 178:	ea 5f       	subi	r30, 0xFA	; 250
 17a:	fd 4f       	sbci	r31, 0xFD	; 253
 17c:	60 95       	com	r22
 17e:	60 83       	st	Z, r22
 180:	44 23       	and	r20, r20
 182:	a9 f0       	breq	.+42     	; 0x1ae <sendServoPacket+0xa6>
 184:	c6 e0       	ldi	r28, 0x06	; 6
 186:	d2 e0       	ldi	r29, 0x02	; 2
 188:	41 50       	subi	r20, 0x01	; 1
 18a:	04 2f       	mov	r16, r20
 18c:	10 e0       	ldi	r17, 0x00	; 0
 18e:	09 5f       	subi	r16, 0xF9	; 249
 190:	1d 4f       	sbci	r17, 0xFD	; 253
 192:	89 91       	ld	r24, Y+
 194:	b0 df       	rcall	.-160    	; 0xf6 <servolWriteByte>
 196:	c0 17       	cp	r28, r16
 198:	d1 07       	cpc	r29, r17
 19a:	d9 f7       	brne	.-10     	; 0x192 <sendServoPacket+0x8a>
 19c:	08 c0       	rjmp	.+16     	; 0x1ae <sendServoPacket+0xa6>
 19e:	25 e0       	ldi	r18, 0x05	; 5
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	46 e0       	ldi	r20, 0x06	; 6
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	60 e0       	ldi	r22, 0x00	; 0
 1aa:	52 e0       	ldi	r21, 0x02	; 2
 1ac:	d9 cf       	rjmp	.-78     	; 0x160 <sendServoPacket+0x58>
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	08 95       	ret

000001b8 <servoGoto>:
 1b8:	9f 92       	push	r9
 1ba:	af 92       	push	r10
 1bc:	bf 92       	push	r11
 1be:	cf 92       	push	r12
 1c0:	df 92       	push	r13
 1c2:	ef 92       	push	r14
 1c4:	ff 92       	push	r15
 1c6:	0f 93       	push	r16
 1c8:	1f 93       	push	r17
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	c8 2f       	mov	r28, r24
 1d0:	cb 01       	movw	r24, r22
 1d2:	ba 01       	movw	r22, r20
 1d4:	12 2f       	mov	r17, r18
 1d6:	d3 2f       	mov	r29, r19
 1d8:	20 e0       	ldi	r18, 0x00	; 0
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	46 e1       	ldi	r20, 0x16	; 22
 1de:	53 e4       	ldi	r21, 0x43	; 67
 1e0:	eb d2       	rcall	.+1494   	; 0x7b8 <__mulsf3>
 1e2:	26 e5       	ldi	r18, 0x56	; 86
 1e4:	3e e0       	ldi	r19, 0x0E	; 14
 1e6:	49 e4       	ldi	r20, 0x49	; 73
 1e8:	50 e4       	ldi	r21, 0x40	; 64
 1ea:	99 d1       	rcall	.+818    	; 0x51e <__divsf3>
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	46 e1       	ldi	r20, 0x16	; 22
 1f2:	53 e4       	ldi	r21, 0x43	; 67
 1f4:	2c d1       	rcall	.+600    	; 0x44e <__addsf3>
 1f6:	96 2e       	mov	r9, r22
 1f8:	e7 2e       	mov	r14, r23
 1fa:	f8 2e       	mov	r15, r24
 1fc:	09 2f       	mov	r16, r25
 1fe:	a6 2e       	mov	r10, r22
 200:	b7 2e       	mov	r11, r23
 202:	c8 2e       	mov	r12, r24
 204:	d9 2e       	mov	r13, r25
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	46 e9       	ldi	r20, 0x96	; 150
 20c:	53 e4       	ldi	r21, 0x43	; 67
 20e:	d0 d2       	rcall	.+1440   	; 0x7b0 <__gesf2>
 210:	18 16       	cp	r1, r24
 212:	5c f0       	brlt	.+22     	; 0x22a <servoGoto+0x72>
 214:	20 e0       	ldi	r18, 0x00	; 0
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	a9 01       	movw	r20, r18
 21a:	69 2d       	mov	r22, r9
 21c:	7e 2d       	mov	r23, r14
 21e:	8f 2d       	mov	r24, r15
 220:	90 2f       	mov	r25, r16
 222:	79 d1       	rcall	.+754    	; 0x516 <__cmpsf2>
 224:	88 23       	and	r24, r24
 226:	84 f4       	brge	.+32     	; 0x248 <servoGoto+0x90>
 228:	0b c0       	rjmp	.+22     	; 0x240 <servoGoto+0x88>
 22a:	a1 2c       	mov	r10, r1
 22c:	b1 2c       	mov	r11, r1
 22e:	0f 2e       	mov	r0, r31
 230:	f6 e9       	ldi	r31, 0x96	; 150
 232:	cf 2e       	mov	r12, r31
 234:	f0 2d       	mov	r31, r0
 236:	0f 2e       	mov	r0, r31
 238:	f3 e4       	ldi	r31, 0x43	; 67
 23a:	df 2e       	mov	r13, r31
 23c:	f0 2d       	mov	r31, r0
 23e:	04 c0       	rjmp	.+8      	; 0x248 <servoGoto+0x90>
 240:	a1 2c       	mov	r10, r1
 242:	b1 2c       	mov	r11, r1
 244:	c1 2c       	mov	r12, r1
 246:	d1 2c       	mov	r13, r1
 248:	20 e0       	ldi	r18, 0x00	; 0
 24a:	30 ec       	ldi	r19, 0xC0	; 192
 24c:	4f e7       	ldi	r20, 0x7F	; 127
 24e:	54 e4       	ldi	r21, 0x44	; 68
 250:	6a 2d       	mov	r22, r10
 252:	7b 2d       	mov	r23, r11
 254:	8c 2d       	mov	r24, r12
 256:	9d 2d       	mov	r25, r13
 258:	af d2       	rcall	.+1374   	; 0x7b8 <__mulsf3>
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	46 e9       	ldi	r20, 0x96	; 150
 260:	53 e4       	ldi	r21, 0x43	; 67
 262:	5d d1       	rcall	.+698    	; 0x51e <__divsf3>
 264:	c4 d1       	rcall	.+904    	; 0x5ee <__fixunssfsi>
 266:	26 2f       	mov	r18, r22
 268:	9e e1       	ldi	r25, 0x1E	; 30
 26a:	90 93 86 02 	sts	0x0286, r25
 26e:	20 93 87 02 	sts	0x0287, r18
 272:	70 93 88 02 	sts	0x0288, r23
 276:	10 93 89 02 	sts	0x0289, r17
 27a:	d0 93 8a 02 	sts	0x028A, r29
 27e:	45 e0       	ldi	r20, 0x05	; 5
 280:	63 e0       	ldi	r22, 0x03	; 3
 282:	8c 2f       	mov	r24, r28
 284:	41 df       	rcall	.-382    	; 0x108 <sendServoPacket>
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	ff 90       	pop	r15
 290:	ef 90       	pop	r14
 292:	df 90       	pop	r13
 294:	cf 90       	pop	r12
 296:	bf 90       	pop	r11
 298:	af 90       	pop	r10
 29a:	9f 90       	pop	r9
 29c:	08 95       	ret

0000029e <main>:


int main(void)
{
 29e:	8f 92       	push	r8
 2a0:	9f 92       	push	r9
 2a2:	af 92       	push	r10
 2a4:	bf 92       	push	r11
 2a6:	cf 92       	push	r12
 2a8:	df 92       	push	r13
 2aa:	ef 92       	push	r14
 2ac:	ff 92       	push	r15
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
	
	DDRD |= (1<<PORTD5);
 2b2:	55 9a       	sbi	0x0a, 5	; 10
	
	initServoSerial();
 2b4:	10 df       	rcall	.-480    	; 0xd6 <initServoSerial>
	
	servoTx;
 2b6:	5c 98       	cbi	0x0b, 4	; 11
	
	
	//set servo angle
	gServoParameters[0] = 0x1E;
 2b8:	8e e1       	ldi	r24, 0x1E	; 30
 2ba:	80 93 86 02 	sts	0x0286, r24
	gServoParameters[1] = 0x00;
 2be:	10 92 87 02 	sts	0x0287, r1
	gServoParameters[2] = 0x02;
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	80 93 88 02 	sts	0x0288, r24
	gServoParameters[3] = 0x00;
 2c8:	10 92 89 02 	sts	0x0289, r1
	gServoParameters[4] = 0x02;
 2cc:	80 93 8a 02 	sts	0x028A, r24
			servoGoto(i, 0, 100);
			_delay_ms(2000);
		}*/

	
	sendServoPacket(BROADCASTING_ID, INST_WRITE, 3);
 2d0:	43 e0       	ldi	r20, 0x03	; 3
 2d2:	63 e0       	ldi	r22, 0x03	; 3
 2d4:	8e ef       	ldi	r24, 0xFE	; 254
 2d6:	18 df       	rcall	.-464    	; 0x108 <sendServoPacket>
	double coxa=56;
	double femur=66;
	double tibia=131;
	double d;
	
		PORTD &= !(1<<PORTD5);
 2d8:	8b b1       	in	r24, 0x0b	; 11
 2da:	1b b8       	out	0x0b, r1	; 11
 2dc:	c4 e0       	ldi	r28, 0x04	; 4
 2de:	d0 e0       	ldi	r29, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e0:	2f ef       	ldi	r18, 0xFF	; 255
 2e2:	83 ed       	ldi	r24, 0xD3	; 211
 2e4:	90 e3       	ldi	r25, 0x30	; 48
 2e6:	21 50       	subi	r18, 0x01	; 1
 2e8:	80 40       	sbci	r24, 0x00	; 0
 2ea:	90 40       	sbci	r25, 0x00	; 0
 2ec:	e1 f7       	brne	.-8      	; 0x2e6 <main+0x48>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <main+0x52>
 2f0:	00 00       	nop
		for(int i=0; i<4; ++i)
		{
			_delay_ms(1000);		
			gamma = atan(x/y);
			d = sqrt(z*z+pow((x-coxa*sin(gamma)), 2)+pow((y-coxa*cos(gamma)), 2));
			beta = 3.1415 - acos((femur*femur+tibia*tibia-d*d)/(2*femur*tibia));
 2f2:	64 e3       	ldi	r22, 0x34	; 52
 2f4:	74 e0       	ldi	r23, 0x04	; 4
 2f6:	8a e1       	ldi	r24, 0x1A	; 26
 2f8:	90 ec       	ldi	r25, 0xC0	; 192
 2fa:	9a d0       	rcall	.+308    	; 0x430 <acos>
 2fc:	6b 01       	movw	r12, r22
 2fe:	7c 01       	movw	r14, r24
			alpha = acos((femur*femur-tibia*tibia+d*d)/(2*femur*d))-asin(z/d);
 300:	6c e6       	ldi	r22, 0x6C	; 108
 302:	79 e3       	ldi	r23, 0x39	; 57
 304:	82 ec       	ldi	r24, 0xC2	; 194
 306:	9f e3       	ldi	r25, 0x3F	; 63
 308:	93 d0       	rcall	.+294    	; 0x430 <acos>
 30a:	4b 01       	movw	r8, r22
 30c:	5c 01       	movw	r10, r24
 30e:	21 97       	sbiw	r28, 0x01	; 1
	double femur=66;
	double tibia=131;
	double d;
	
		PORTD &= !(1<<PORTD5);
		for(int i=0; i<4; ++i)
 310:	39 f7       	brne	.-50     	; 0x2e0 <main+0x42>
			d = sqrt(z*z+pow((x-coxa*sin(gamma)), 2)+pow((y-coxa*cos(gamma)), 2));
			beta = 3.1415 - acos((femur*femur+tibia*tibia-d*d)/(2*femur*tibia));
			alpha = acos((femur*femur-tibia*tibia+d*d)/(2*femur*d))-asin(z/d);
			d = alpha + beta;
		}
		PORTD |= (1<<PORTD5);
 312:	5d 9a       	sbi	0x0b, 5	; 11
 314:	2f ef       	ldi	r18, 0xFF	; 255
 316:	83 ed       	ldi	r24, 0xD3	; 211
 318:	90 e3       	ldi	r25, 0x30	; 48
 31a:	21 50       	subi	r18, 0x01	; 1
 31c:	80 40       	sbci	r24, 0x00	; 0
 31e:	90 40       	sbci	r25, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <main+0x7c>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x86>
 324:	00 00       	nop
		_delay_ms(1000);
	
	servoGoto(14, gamma, 50);
 326:	22 e3       	ldi	r18, 0x32	; 50
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	4d e8       	ldi	r20, 0x8D	; 141
 32c:	5a e5       	ldi	r21, 0x5A	; 90
 32e:	6d e1       	ldi	r22, 0x1D	; 29
 330:	7f e3       	ldi	r23, 0x3F	; 63
 332:	8e e0       	ldi	r24, 0x0E	; 14
 334:	41 df       	rcall	.-382    	; 0x1b8 <servoGoto>
		{
			_delay_ms(1000);		
			gamma = atan(x/y);
			d = sqrt(z*z+pow((x-coxa*sin(gamma)), 2)+pow((y-coxa*cos(gamma)), 2));
			beta = 3.1415 - acos((femur*femur+tibia*tibia-d*d)/(2*femur*tibia));
			alpha = acos((femur*femur-tibia*tibia+d*d)/(2*femur*d))-asin(z/d);
 336:	24 ed       	ldi	r18, 0xD4	; 212
 338:	3f ea       	ldi	r19, 0xAF	; 175
 33a:	4b e6       	ldi	r20, 0x6B	; 107
 33c:	5f e3       	ldi	r21, 0x3F	; 63
 33e:	c5 01       	movw	r24, r10
 340:	b4 01       	movw	r22, r8
 342:	84 d0       	rcall	.+264    	; 0x44c <__subsf3>
		}
		PORTD |= (1<<PORTD5);
		_delay_ms(1000);
	
	servoGoto(14, gamma, 50);
	servoGoto(16,alpha+0.2426,50);
 344:	22 e2       	ldi	r18, 0x22	; 34
 346:	3c e6       	ldi	r19, 0x6C	; 108
 348:	48 e7       	ldi	r20, 0x78	; 120
 34a:	5e e3       	ldi	r21, 0x3E	; 62
 34c:	80 d0       	rcall	.+256    	; 0x44e <__addsf3>
 34e:	ab 01       	movw	r20, r22
 350:	bc 01       	movw	r22, r24
 352:	22 e3       	ldi	r18, 0x32	; 50
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	80 e1       	ldi	r24, 0x10	; 16
 358:	2f df       	rcall	.-418    	; 0x1b8 <servoGoto>
		for(int i=0; i<4; ++i)
		{
			_delay_ms(1000);		
			gamma = atan(x/y);
			d = sqrt(z*z+pow((x-coxa*sin(gamma)), 2)+pow((y-coxa*cos(gamma)), 2));
			beta = 3.1415 - acos((femur*femur+tibia*tibia-d*d)/(2*femur*tibia));
 35a:	a7 01       	movw	r20, r14
 35c:	96 01       	movw	r18, r12
 35e:	66 e5       	ldi	r22, 0x56	; 86
 360:	7e e0       	ldi	r23, 0x0E	; 14
 362:	89 e4       	ldi	r24, 0x49	; 73
 364:	90 e4       	ldi	r25, 0x40	; 64
 366:	72 d0       	rcall	.+228    	; 0x44c <__subsf3>
 368:	9b 01       	movw	r18, r22
 36a:	ac 01       	movw	r20, r24
		PORTD |= (1<<PORTD5);
		_delay_ms(1000);
	
	servoGoto(14, gamma, 50);
	servoGoto(16,alpha+0.2426,50);
	servoGoto(18, -beta+3.1415/4,50);
 36c:	66 e5       	ldi	r22, 0x56	; 86
 36e:	7e e0       	ldi	r23, 0x0E	; 14
 370:	89 e4       	ldi	r24, 0x49	; 73
 372:	9f e3       	ldi	r25, 0x3F	; 63
 374:	6b d0       	rcall	.+214    	; 0x44c <__subsf3>
 376:	ab 01       	movw	r20, r22
 378:	bc 01       	movw	r22, r24
 37a:	22 e3       	ldi	r18, 0x32	; 50
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	82 e1       	ldi	r24, 0x12	; 18
 380:	1b df       	rcall	.-458    	; 0x1b8 <servoGoto>
}
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	ff 90       	pop	r15
 38c:	ef 90       	pop	r14
 38e:	df 90       	pop	r13
 390:	cf 90       	pop	r12
 392:	bf 90       	pop	r11
 394:	af 90       	pop	r10
 396:	9f 90       	pop	r9
 398:	8f 90       	pop	r8
 39a:	08 95       	ret

0000039c <__vector_28>:

// -- Interrupts --

ISR (USART1_RX_vect)
{
 39c:	1f 92       	push	r1
 39e:	0f 92       	push	r0
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	0f 92       	push	r0
 3a4:	11 24       	eor	r1, r1
 3a6:	8f 93       	push	r24
 3a8:	9f 93       	push	r25
	uint8_t data;
	data = UDR1; // read data from buffer TODO: add check for overflow
 3aa:	90 91 ce 00 	lds	r25, 0x00CE
	
	if(data == 0xff)
 3ae:	9f 3f       	cpi	r25, 0xFF	; 255
 3b0:	71 f4       	brne	.+28     	; 0x3ce <__vector_28+0x32>
	{
		if(gServoRxReadMode == RM_WAIT_FOR_START)
 3b2:	80 91 01 01 	lds	r24, 0x0101
 3b6:	81 11       	cpse	r24, r1
 3b8:	04 c0       	rjmp	.+8      	; 0x3c2 <__vector_28+0x26>
		{
			gServoRxReadMode = RM_CHECK_FOR_SECOND_START;
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	80 93 01 01 	sts	0x0101, r24
 3c0:	30 c0       	rjmp	.+96     	; 0x422 <__vector_28+0x86>
			
		}else if(gServoRxReadMode == RM_CHECK_FOR_SECOND_START)
 3c2:	81 30       	cpi	r24, 0x01	; 1
 3c4:	71 f5       	brne	.+92     	; 0x422 <__vector_28+0x86>
		{
			gServoRxReadMode = RM_READ_ID;
 3c6:	82 e0       	ldi	r24, 0x02	; 2
 3c8:	80 93 01 01 	sts	0x0101, r24
 3cc:	2a c0       	rjmp	.+84     	; 0x422 <__vector_28+0x86>
		}
		
	}else if(gServoRxReadMode == RM_READ_ID)
 3ce:	80 91 01 01 	lds	r24, 0x0101
 3d2:	82 30       	cpi	r24, 0x02	; 2
 3d4:	31 f4       	brne	.+12     	; 0x3e2 <__vector_28+0x46>
	{
		gServoRxBuffer[0] = data;
 3d6:	90 93 02 01 	sts	0x0102, r25
		gServoRxReadMode = RM_READ_LENGTH;
 3da:	83 e0       	ldi	r24, 0x03	; 3
 3dc:	80 93 01 01 	sts	0x0101, r24
 3e0:	20 c0       	rjmp	.+64     	; 0x422 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_LENGTH)
 3e2:	83 30       	cpi	r24, 0x03	; 3
 3e4:	41 f4       	brne	.+16     	; 0x3f6 <__vector_28+0x5a>
	{
		gServoRxBuffer[1] = data;
 3e6:	90 93 03 01 	sts	0x0103, r25
		// TODO: add check for correct length maybe?
		gServoLengthCounter = data;
 3ea:	90 93 00 01 	sts	0x0100, r25
		gServoRxReadMode = RM_READ_ERROR;	
 3ee:	84 e0       	ldi	r24, 0x04	; 4
 3f0:	80 93 01 01 	sts	0x0101, r24
 3f4:	16 c0       	rjmp	.+44     	; 0x422 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_ERROR)
 3f6:	84 30       	cpi	r24, 0x04	; 4
 3f8:	59 f4       	brne	.+22     	; 0x410 <__vector_28+0x74>
	{
		gServoRxBuffer[2] = data;
 3fa:	90 93 04 01 	sts	0x0104, r25
		gServoRxReadMode = RM_READ_PARAMETERS;
 3fe:	86 e0       	ldi	r24, 0x06	; 6
 400:	80 93 01 01 	sts	0x0101, r24
		--gServoLengthCounter;
 404:	80 91 00 01 	lds	r24, 0x0100
 408:	81 50       	subi	r24, 0x01	; 1
 40a:	80 93 00 01 	sts	0x0100, r24
 40e:	09 c0       	rjmp	.+18     	; 0x422 <__vector_28+0x86>
	}else if(gServoRxReadMode == RM_READ_PARAMETERS)
 410:	86 30       	cpi	r24, 0x06	; 6
 412:	39 f4       	brne	.+14     	; 0x422 <__vector_28+0x86>
	{
		if(gServoLengthCounter == 2)  
 414:	80 91 00 01 	lds	r24, 0x0100
 418:	82 30       	cpi	r24, 0x02	; 2
 41a:	19 f4       	brne	.+6      	; 0x422 <__vector_28+0x86>
		{
			gServoRxReadMode = RM_READ_CHECKSUM;
 41c:	87 e0       	ldi	r24, 0x07	; 7
 41e:	80 93 01 01 	sts	0x0101, r24
		}
	// TODO: figure out how to get the index for gbuffer correct...
	}
}
 422:	9f 91       	pop	r25
 424:	8f 91       	pop	r24
 426:	0f 90       	pop	r0
 428:	0f be       	out	0x3f, r0	; 63
 42a:	0f 90       	pop	r0
 42c:	1f 90       	pop	r1
 42e:	18 95       	reti

00000430 <acos>:
 430:	9f 93       	push	r25
 432:	9f 77       	andi	r25, 0x7F	; 127
 434:	08 d1       	rcall	.+528    	; 0x646 <__fp_arccos>
 436:	0f 90       	pop	r0
 438:	00 20       	and	r0, r0
 43a:	3a f4       	brpl	.+14     	; 0x44a <acos+0x1a>
 43c:	90 58       	subi	r25, 0x80	; 128
 43e:	a2 ea       	ldi	r26, 0xA2	; 162
 440:	2a ed       	ldi	r18, 0xDA	; 218
 442:	3f e0       	ldi	r19, 0x0F	; 15
 444:	49 e4       	ldi	r20, 0x49	; 73
 446:	50 e4       	ldi	r21, 0x40	; 64
 448:	13 d0       	rcall	.+38     	; 0x470 <__addsf3x>
 44a:	78 c1       	rjmp	.+752    	; 0x73c <__fp_round>

0000044c <__subsf3>:
 44c:	50 58       	subi	r21, 0x80	; 128

0000044e <__addsf3>:
 44e:	bb 27       	eor	r27, r27
 450:	aa 27       	eor	r26, r26
 452:	0e d0       	rcall	.+28     	; 0x470 <__addsf3x>
 454:	73 c1       	rjmp	.+742    	; 0x73c <__fp_round>
 456:	64 d1       	rcall	.+712    	; 0x720 <__fp_pscA>
 458:	30 f0       	brcs	.+12     	; 0x466 <__addsf3+0x18>
 45a:	69 d1       	rcall	.+722    	; 0x72e <__fp_pscB>
 45c:	20 f0       	brcs	.+8      	; 0x466 <__addsf3+0x18>
 45e:	31 f4       	brne	.+12     	; 0x46c <__addsf3+0x1e>
 460:	9f 3f       	cpi	r25, 0xFF	; 255
 462:	11 f4       	brne	.+4      	; 0x468 <__addsf3+0x1a>
 464:	1e f4       	brtc	.+6      	; 0x46c <__addsf3+0x1e>
 466:	34 c1       	rjmp	.+616    	; 0x6d0 <__fp_nan>
 468:	0e f4       	brtc	.+2      	; 0x46c <__addsf3+0x1e>
 46a:	e0 95       	com	r30
 46c:	e7 fb       	bst	r30, 7
 46e:	2a c1       	rjmp	.+596    	; 0x6c4 <__fp_inf>

00000470 <__addsf3x>:
 470:	e9 2f       	mov	r30, r25
 472:	75 d1       	rcall	.+746    	; 0x75e <__fp_split3>
 474:	80 f3       	brcs	.-32     	; 0x456 <__addsf3+0x8>
 476:	ba 17       	cp	r27, r26
 478:	62 07       	cpc	r22, r18
 47a:	73 07       	cpc	r23, r19
 47c:	84 07       	cpc	r24, r20
 47e:	95 07       	cpc	r25, r21
 480:	18 f0       	brcs	.+6      	; 0x488 <__addsf3x+0x18>
 482:	71 f4       	brne	.+28     	; 0x4a0 <__addsf3x+0x30>
 484:	9e f5       	brtc	.+102    	; 0x4ec <__addsf3x+0x7c>
 486:	8d c1       	rjmp	.+794    	; 0x7a2 <__fp_zero>
 488:	0e f4       	brtc	.+2      	; 0x48c <__addsf3x+0x1c>
 48a:	e0 95       	com	r30
 48c:	0b 2e       	mov	r0, r27
 48e:	ba 2f       	mov	r27, r26
 490:	a0 2d       	mov	r26, r0
 492:	0b 01       	movw	r0, r22
 494:	b9 01       	movw	r22, r18
 496:	90 01       	movw	r18, r0
 498:	0c 01       	movw	r0, r24
 49a:	ca 01       	movw	r24, r20
 49c:	a0 01       	movw	r20, r0
 49e:	11 24       	eor	r1, r1
 4a0:	ff 27       	eor	r31, r31
 4a2:	59 1b       	sub	r21, r25
 4a4:	99 f0       	breq	.+38     	; 0x4cc <__addsf3x+0x5c>
 4a6:	59 3f       	cpi	r21, 0xF9	; 249
 4a8:	50 f4       	brcc	.+20     	; 0x4be <__addsf3x+0x4e>
 4aa:	50 3e       	cpi	r21, 0xE0	; 224
 4ac:	68 f1       	brcs	.+90     	; 0x508 <__addsf3x+0x98>
 4ae:	1a 16       	cp	r1, r26
 4b0:	f0 40       	sbci	r31, 0x00	; 0
 4b2:	a2 2f       	mov	r26, r18
 4b4:	23 2f       	mov	r18, r19
 4b6:	34 2f       	mov	r19, r20
 4b8:	44 27       	eor	r20, r20
 4ba:	58 5f       	subi	r21, 0xF8	; 248
 4bc:	f3 cf       	rjmp	.-26     	; 0x4a4 <__addsf3x+0x34>
 4be:	46 95       	lsr	r20
 4c0:	37 95       	ror	r19
 4c2:	27 95       	ror	r18
 4c4:	a7 95       	ror	r26
 4c6:	f0 40       	sbci	r31, 0x00	; 0
 4c8:	53 95       	inc	r21
 4ca:	c9 f7       	brne	.-14     	; 0x4be <__addsf3x+0x4e>
 4cc:	7e f4       	brtc	.+30     	; 0x4ec <__addsf3x+0x7c>
 4ce:	1f 16       	cp	r1, r31
 4d0:	ba 0b       	sbc	r27, r26
 4d2:	62 0b       	sbc	r22, r18
 4d4:	73 0b       	sbc	r23, r19
 4d6:	84 0b       	sbc	r24, r20
 4d8:	ba f0       	brmi	.+46     	; 0x508 <__addsf3x+0x98>
 4da:	91 50       	subi	r25, 0x01	; 1
 4dc:	a1 f0       	breq	.+40     	; 0x506 <__addsf3x+0x96>
 4de:	ff 0f       	add	r31, r31
 4e0:	bb 1f       	adc	r27, r27
 4e2:	66 1f       	adc	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	c2 f7       	brpl	.-16     	; 0x4da <__addsf3x+0x6a>
 4ea:	0e c0       	rjmp	.+28     	; 0x508 <__addsf3x+0x98>
 4ec:	ba 0f       	add	r27, r26
 4ee:	62 1f       	adc	r22, r18
 4f0:	73 1f       	adc	r23, r19
 4f2:	84 1f       	adc	r24, r20
 4f4:	48 f4       	brcc	.+18     	; 0x508 <__addsf3x+0x98>
 4f6:	87 95       	ror	r24
 4f8:	77 95       	ror	r23
 4fa:	67 95       	ror	r22
 4fc:	b7 95       	ror	r27
 4fe:	f7 95       	ror	r31
 500:	9e 3f       	cpi	r25, 0xFE	; 254
 502:	08 f0       	brcs	.+2      	; 0x506 <__addsf3x+0x96>
 504:	b3 cf       	rjmp	.-154    	; 0x46c <__addsf3+0x1e>
 506:	93 95       	inc	r25
 508:	88 0f       	add	r24, r24
 50a:	08 f0       	brcs	.+2      	; 0x50e <__addsf3x+0x9e>
 50c:	99 27       	eor	r25, r25
 50e:	ee 0f       	add	r30, r30
 510:	97 95       	ror	r25
 512:	87 95       	ror	r24
 514:	08 95       	ret

00000516 <__cmpsf2>:
 516:	b2 d0       	rcall	.+356    	; 0x67c <__fp_cmp>
 518:	08 f4       	brcc	.+2      	; 0x51c <__cmpsf2+0x6>
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	08 95       	ret

0000051e <__divsf3>:
 51e:	0c d0       	rcall	.+24     	; 0x538 <__divsf3x>
 520:	0d c1       	rjmp	.+538    	; 0x73c <__fp_round>
 522:	05 d1       	rcall	.+522    	; 0x72e <__fp_pscB>
 524:	40 f0       	brcs	.+16     	; 0x536 <__divsf3+0x18>
 526:	fc d0       	rcall	.+504    	; 0x720 <__fp_pscA>
 528:	30 f0       	brcs	.+12     	; 0x536 <__divsf3+0x18>
 52a:	21 f4       	brne	.+8      	; 0x534 <__divsf3+0x16>
 52c:	5f 3f       	cpi	r21, 0xFF	; 255
 52e:	19 f0       	breq	.+6      	; 0x536 <__divsf3+0x18>
 530:	c9 c0       	rjmp	.+402    	; 0x6c4 <__fp_inf>
 532:	51 11       	cpse	r21, r1
 534:	37 c1       	rjmp	.+622    	; 0x7a4 <__fp_szero>
 536:	cc c0       	rjmp	.+408    	; 0x6d0 <__fp_nan>

00000538 <__divsf3x>:
 538:	12 d1       	rcall	.+548    	; 0x75e <__fp_split3>
 53a:	98 f3       	brcs	.-26     	; 0x522 <__divsf3+0x4>

0000053c <__divsf3_pse>:
 53c:	99 23       	and	r25, r25
 53e:	c9 f3       	breq	.-14     	; 0x532 <__divsf3+0x14>
 540:	55 23       	and	r21, r21
 542:	b1 f3       	breq	.-20     	; 0x530 <__divsf3+0x12>
 544:	95 1b       	sub	r25, r21
 546:	55 0b       	sbc	r21, r21
 548:	bb 27       	eor	r27, r27
 54a:	aa 27       	eor	r26, r26
 54c:	62 17       	cp	r22, r18
 54e:	73 07       	cpc	r23, r19
 550:	84 07       	cpc	r24, r20
 552:	38 f0       	brcs	.+14     	; 0x562 <__divsf3_pse+0x26>
 554:	9f 5f       	subi	r25, 0xFF	; 255
 556:	5f 4f       	sbci	r21, 0xFF	; 255
 558:	22 0f       	add	r18, r18
 55a:	33 1f       	adc	r19, r19
 55c:	44 1f       	adc	r20, r20
 55e:	aa 1f       	adc	r26, r26
 560:	a9 f3       	breq	.-22     	; 0x54c <__divsf3_pse+0x10>
 562:	33 d0       	rcall	.+102    	; 0x5ca <__divsf3_pse+0x8e>
 564:	0e 2e       	mov	r0, r30
 566:	3a f0       	brmi	.+14     	; 0x576 <__divsf3_pse+0x3a>
 568:	e0 e8       	ldi	r30, 0x80	; 128
 56a:	30 d0       	rcall	.+96     	; 0x5cc <__divsf3_pse+0x90>
 56c:	91 50       	subi	r25, 0x01	; 1
 56e:	50 40       	sbci	r21, 0x00	; 0
 570:	e6 95       	lsr	r30
 572:	00 1c       	adc	r0, r0
 574:	ca f7       	brpl	.-14     	; 0x568 <__divsf3_pse+0x2c>
 576:	29 d0       	rcall	.+82     	; 0x5ca <__divsf3_pse+0x8e>
 578:	fe 2f       	mov	r31, r30
 57a:	27 d0       	rcall	.+78     	; 0x5ca <__divsf3_pse+0x8e>
 57c:	66 0f       	add	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	88 1f       	adc	r24, r24
 582:	bb 1f       	adc	r27, r27
 584:	26 17       	cp	r18, r22
 586:	37 07       	cpc	r19, r23
 588:	48 07       	cpc	r20, r24
 58a:	ab 07       	cpc	r26, r27
 58c:	b0 e8       	ldi	r27, 0x80	; 128
 58e:	09 f0       	breq	.+2      	; 0x592 <__divsf3_pse+0x56>
 590:	bb 0b       	sbc	r27, r27
 592:	80 2d       	mov	r24, r0
 594:	bf 01       	movw	r22, r30
 596:	ff 27       	eor	r31, r31
 598:	93 58       	subi	r25, 0x83	; 131
 59a:	5f 4f       	sbci	r21, 0xFF	; 255
 59c:	2a f0       	brmi	.+10     	; 0x5a8 <__divsf3_pse+0x6c>
 59e:	9e 3f       	cpi	r25, 0xFE	; 254
 5a0:	51 05       	cpc	r21, r1
 5a2:	68 f0       	brcs	.+26     	; 0x5be <__divsf3_pse+0x82>
 5a4:	8f c0       	rjmp	.+286    	; 0x6c4 <__fp_inf>
 5a6:	fe c0       	rjmp	.+508    	; 0x7a4 <__fp_szero>
 5a8:	5f 3f       	cpi	r21, 0xFF	; 255
 5aa:	ec f3       	brlt	.-6      	; 0x5a6 <__divsf3_pse+0x6a>
 5ac:	98 3e       	cpi	r25, 0xE8	; 232
 5ae:	dc f3       	brlt	.-10     	; 0x5a6 <__divsf3_pse+0x6a>
 5b0:	86 95       	lsr	r24
 5b2:	77 95       	ror	r23
 5b4:	67 95       	ror	r22
 5b6:	b7 95       	ror	r27
 5b8:	f7 95       	ror	r31
 5ba:	9f 5f       	subi	r25, 0xFF	; 255
 5bc:	c9 f7       	brne	.-14     	; 0x5b0 <__divsf3_pse+0x74>
 5be:	88 0f       	add	r24, r24
 5c0:	91 1d       	adc	r25, r1
 5c2:	96 95       	lsr	r25
 5c4:	87 95       	ror	r24
 5c6:	97 f9       	bld	r25, 7
 5c8:	08 95       	ret
 5ca:	e1 e0       	ldi	r30, 0x01	; 1
 5cc:	66 0f       	add	r22, r22
 5ce:	77 1f       	adc	r23, r23
 5d0:	88 1f       	adc	r24, r24
 5d2:	bb 1f       	adc	r27, r27
 5d4:	62 17       	cp	r22, r18
 5d6:	73 07       	cpc	r23, r19
 5d8:	84 07       	cpc	r24, r20
 5da:	ba 07       	cpc	r27, r26
 5dc:	20 f0       	brcs	.+8      	; 0x5e6 <__divsf3_pse+0xaa>
 5de:	62 1b       	sub	r22, r18
 5e0:	73 0b       	sbc	r23, r19
 5e2:	84 0b       	sbc	r24, r20
 5e4:	ba 0b       	sbc	r27, r26
 5e6:	ee 1f       	adc	r30, r30
 5e8:	88 f7       	brcc	.-30     	; 0x5cc <__divsf3_pse+0x90>
 5ea:	e0 95       	com	r30
 5ec:	08 95       	ret

000005ee <__fixunssfsi>:
 5ee:	bf d0       	rcall	.+382    	; 0x76e <__fp_splitA>
 5f0:	88 f0       	brcs	.+34     	; 0x614 <__fixunssfsi+0x26>
 5f2:	9f 57       	subi	r25, 0x7F	; 127
 5f4:	90 f0       	brcs	.+36     	; 0x61a <__fixunssfsi+0x2c>
 5f6:	b9 2f       	mov	r27, r25
 5f8:	99 27       	eor	r25, r25
 5fa:	b7 51       	subi	r27, 0x17	; 23
 5fc:	a0 f0       	brcs	.+40     	; 0x626 <__fixunssfsi+0x38>
 5fe:	d1 f0       	breq	.+52     	; 0x634 <__fixunssfsi+0x46>
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	99 1f       	adc	r25, r25
 608:	1a f0       	brmi	.+6      	; 0x610 <__fixunssfsi+0x22>
 60a:	ba 95       	dec	r27
 60c:	c9 f7       	brne	.-14     	; 0x600 <__fixunssfsi+0x12>
 60e:	12 c0       	rjmp	.+36     	; 0x634 <__fixunssfsi+0x46>
 610:	b1 30       	cpi	r27, 0x01	; 1
 612:	81 f0       	breq	.+32     	; 0x634 <__fixunssfsi+0x46>
 614:	c6 d0       	rcall	.+396    	; 0x7a2 <__fp_zero>
 616:	b1 e0       	ldi	r27, 0x01	; 1
 618:	08 95       	ret
 61a:	c3 c0       	rjmp	.+390    	; 0x7a2 <__fp_zero>
 61c:	67 2f       	mov	r22, r23
 61e:	78 2f       	mov	r23, r24
 620:	88 27       	eor	r24, r24
 622:	b8 5f       	subi	r27, 0xF8	; 248
 624:	39 f0       	breq	.+14     	; 0x634 <__fixunssfsi+0x46>
 626:	b9 3f       	cpi	r27, 0xF9	; 249
 628:	cc f3       	brlt	.-14     	; 0x61c <__fixunssfsi+0x2e>
 62a:	86 95       	lsr	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b3 95       	inc	r27
 632:	d9 f7       	brne	.-10     	; 0x62a <__fixunssfsi+0x3c>
 634:	3e f4       	brtc	.+14     	; 0x644 <__fixunssfsi+0x56>
 636:	90 95       	com	r25
 638:	80 95       	com	r24
 63a:	70 95       	com	r23
 63c:	61 95       	neg	r22
 63e:	7f 4f       	sbci	r23, 0xFF	; 255
 640:	8f 4f       	sbci	r24, 0xFF	; 255
 642:	9f 4f       	sbci	r25, 0xFF	; 255
 644:	08 95       	ret

00000646 <__fp_arccos>:
 646:	df 93       	push	r29
 648:	cf 93       	push	r28
 64a:	1f 93       	push	r17
 64c:	0f 93       	push	r16
 64e:	8b 01       	movw	r16, r22
 650:	ec 01       	movw	r28, r24
 652:	ec e8       	ldi	r30, 0x8C	; 140
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	3f d0       	rcall	.+126    	; 0x6d6 <__fp_powser>
 658:	71 d0       	rcall	.+226    	; 0x73c <__fp_round>
 65a:	98 01       	movw	r18, r16
 65c:	ae 01       	movw	r20, r28
 65e:	8b 01       	movw	r16, r22
 660:	ec 01       	movw	r28, r24
 662:	60 e0       	ldi	r22, 0x00	; 0
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	80 e8       	ldi	r24, 0x80	; 128
 668:	9f e3       	ldi	r25, 0x3F	; 63
 66a:	f0 de       	rcall	.-544    	; 0x44c <__subsf3>
 66c:	0c d1       	rcall	.+536    	; 0x886 <sqrt>
 66e:	98 01       	movw	r18, r16
 670:	ae 01       	movw	r20, r28
 672:	0f 91       	pop	r16
 674:	1f 91       	pop	r17
 676:	cf 91       	pop	r28
 678:	df 91       	pop	r29
 67a:	aa c0       	rjmp	.+340    	; 0x7d0 <__mulsf3x>

0000067c <__fp_cmp>:
 67c:	99 0f       	add	r25, r25
 67e:	00 08       	sbc	r0, r0
 680:	55 0f       	add	r21, r21
 682:	aa 0b       	sbc	r26, r26
 684:	e0 e8       	ldi	r30, 0x80	; 128
 686:	fe ef       	ldi	r31, 0xFE	; 254
 688:	16 16       	cp	r1, r22
 68a:	17 06       	cpc	r1, r23
 68c:	e8 07       	cpc	r30, r24
 68e:	f9 07       	cpc	r31, r25
 690:	c0 f0       	brcs	.+48     	; 0x6c2 <__fp_cmp+0x46>
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	e4 07       	cpc	r30, r20
 698:	f5 07       	cpc	r31, r21
 69a:	98 f0       	brcs	.+38     	; 0x6c2 <__fp_cmp+0x46>
 69c:	62 1b       	sub	r22, r18
 69e:	73 0b       	sbc	r23, r19
 6a0:	84 0b       	sbc	r24, r20
 6a2:	95 0b       	sbc	r25, r21
 6a4:	39 f4       	brne	.+14     	; 0x6b4 <__fp_cmp+0x38>
 6a6:	0a 26       	eor	r0, r26
 6a8:	61 f0       	breq	.+24     	; 0x6c2 <__fp_cmp+0x46>
 6aa:	23 2b       	or	r18, r19
 6ac:	24 2b       	or	r18, r20
 6ae:	25 2b       	or	r18, r21
 6b0:	21 f4       	brne	.+8      	; 0x6ba <__fp_cmp+0x3e>
 6b2:	08 95       	ret
 6b4:	0a 26       	eor	r0, r26
 6b6:	09 f4       	brne	.+2      	; 0x6ba <__fp_cmp+0x3e>
 6b8:	a1 40       	sbci	r26, 0x01	; 1
 6ba:	a6 95       	lsr	r26
 6bc:	8f ef       	ldi	r24, 0xFF	; 255
 6be:	81 1d       	adc	r24, r1
 6c0:	81 1d       	adc	r24, r1
 6c2:	08 95       	ret

000006c4 <__fp_inf>:
 6c4:	97 f9       	bld	r25, 7
 6c6:	9f 67       	ori	r25, 0x7F	; 127
 6c8:	80 e8       	ldi	r24, 0x80	; 128
 6ca:	70 e0       	ldi	r23, 0x00	; 0
 6cc:	60 e0       	ldi	r22, 0x00	; 0
 6ce:	08 95       	ret

000006d0 <__fp_nan>:
 6d0:	9f ef       	ldi	r25, 0xFF	; 255
 6d2:	80 ec       	ldi	r24, 0xC0	; 192
 6d4:	08 95       	ret

000006d6 <__fp_powser>:
 6d6:	df 93       	push	r29
 6d8:	cf 93       	push	r28
 6da:	1f 93       	push	r17
 6dc:	0f 93       	push	r16
 6de:	ff 92       	push	r15
 6e0:	ef 92       	push	r14
 6e2:	df 92       	push	r13
 6e4:	7b 01       	movw	r14, r22
 6e6:	8c 01       	movw	r16, r24
 6e8:	68 94       	set
 6ea:	05 c0       	rjmp	.+10     	; 0x6f6 <__fp_powser+0x20>
 6ec:	da 2e       	mov	r13, r26
 6ee:	ef 01       	movw	r28, r30
 6f0:	6f d0       	rcall	.+222    	; 0x7d0 <__mulsf3x>
 6f2:	fe 01       	movw	r30, r28
 6f4:	e8 94       	clt
 6f6:	a5 91       	lpm	r26, Z+
 6f8:	25 91       	lpm	r18, Z+
 6fa:	35 91       	lpm	r19, Z+
 6fc:	45 91       	lpm	r20, Z+
 6fe:	55 91       	lpm	r21, Z+
 700:	ae f3       	brts	.-22     	; 0x6ec <__fp_powser+0x16>
 702:	ef 01       	movw	r28, r30
 704:	b5 de       	rcall	.-662    	; 0x470 <__addsf3x>
 706:	fe 01       	movw	r30, r28
 708:	97 01       	movw	r18, r14
 70a:	a8 01       	movw	r20, r16
 70c:	da 94       	dec	r13
 70e:	79 f7       	brne	.-34     	; 0x6ee <__fp_powser+0x18>
 710:	df 90       	pop	r13
 712:	ef 90       	pop	r14
 714:	ff 90       	pop	r15
 716:	0f 91       	pop	r16
 718:	1f 91       	pop	r17
 71a:	cf 91       	pop	r28
 71c:	df 91       	pop	r29
 71e:	08 95       	ret

00000720 <__fp_pscA>:
 720:	00 24       	eor	r0, r0
 722:	0a 94       	dec	r0
 724:	16 16       	cp	r1, r22
 726:	17 06       	cpc	r1, r23
 728:	18 06       	cpc	r1, r24
 72a:	09 06       	cpc	r0, r25
 72c:	08 95       	ret

0000072e <__fp_pscB>:
 72e:	00 24       	eor	r0, r0
 730:	0a 94       	dec	r0
 732:	12 16       	cp	r1, r18
 734:	13 06       	cpc	r1, r19
 736:	14 06       	cpc	r1, r20
 738:	05 06       	cpc	r0, r21
 73a:	08 95       	ret

0000073c <__fp_round>:
 73c:	09 2e       	mov	r0, r25
 73e:	03 94       	inc	r0
 740:	00 0c       	add	r0, r0
 742:	11 f4       	brne	.+4      	; 0x748 <__fp_round+0xc>
 744:	88 23       	and	r24, r24
 746:	52 f0       	brmi	.+20     	; 0x75c <__fp_round+0x20>
 748:	bb 0f       	add	r27, r27
 74a:	40 f4       	brcc	.+16     	; 0x75c <__fp_round+0x20>
 74c:	bf 2b       	or	r27, r31
 74e:	11 f4       	brne	.+4      	; 0x754 <__fp_round+0x18>
 750:	60 ff       	sbrs	r22, 0
 752:	04 c0       	rjmp	.+8      	; 0x75c <__fp_round+0x20>
 754:	6f 5f       	subi	r22, 0xFF	; 255
 756:	7f 4f       	sbci	r23, 0xFF	; 255
 758:	8f 4f       	sbci	r24, 0xFF	; 255
 75a:	9f 4f       	sbci	r25, 0xFF	; 255
 75c:	08 95       	ret

0000075e <__fp_split3>:
 75e:	57 fd       	sbrc	r21, 7
 760:	90 58       	subi	r25, 0x80	; 128
 762:	44 0f       	add	r20, r20
 764:	55 1f       	adc	r21, r21
 766:	59 f0       	breq	.+22     	; 0x77e <__fp_splitA+0x10>
 768:	5f 3f       	cpi	r21, 0xFF	; 255
 76a:	71 f0       	breq	.+28     	; 0x788 <__fp_splitA+0x1a>
 76c:	47 95       	ror	r20

0000076e <__fp_splitA>:
 76e:	88 0f       	add	r24, r24
 770:	97 fb       	bst	r25, 7
 772:	99 1f       	adc	r25, r25
 774:	61 f0       	breq	.+24     	; 0x78e <__fp_splitA+0x20>
 776:	9f 3f       	cpi	r25, 0xFF	; 255
 778:	79 f0       	breq	.+30     	; 0x798 <__fp_splitA+0x2a>
 77a:	87 95       	ror	r24
 77c:	08 95       	ret
 77e:	12 16       	cp	r1, r18
 780:	13 06       	cpc	r1, r19
 782:	14 06       	cpc	r1, r20
 784:	55 1f       	adc	r21, r21
 786:	f2 cf       	rjmp	.-28     	; 0x76c <__fp_split3+0xe>
 788:	46 95       	lsr	r20
 78a:	f1 df       	rcall	.-30     	; 0x76e <__fp_splitA>
 78c:	08 c0       	rjmp	.+16     	; 0x79e <__fp_splitA+0x30>
 78e:	16 16       	cp	r1, r22
 790:	17 06       	cpc	r1, r23
 792:	18 06       	cpc	r1, r24
 794:	99 1f       	adc	r25, r25
 796:	f1 cf       	rjmp	.-30     	; 0x77a <__fp_splitA+0xc>
 798:	86 95       	lsr	r24
 79a:	71 05       	cpc	r23, r1
 79c:	61 05       	cpc	r22, r1
 79e:	08 94       	sec
 7a0:	08 95       	ret

000007a2 <__fp_zero>:
 7a2:	e8 94       	clt

000007a4 <__fp_szero>:
 7a4:	bb 27       	eor	r27, r27
 7a6:	66 27       	eor	r22, r22
 7a8:	77 27       	eor	r23, r23
 7aa:	cb 01       	movw	r24, r22
 7ac:	97 f9       	bld	r25, 7
 7ae:	08 95       	ret

000007b0 <__gesf2>:
 7b0:	65 df       	rcall	.-310    	; 0x67c <__fp_cmp>
 7b2:	08 f4       	brcc	.+2      	; 0x7b6 <__gesf2+0x6>
 7b4:	8f ef       	ldi	r24, 0xFF	; 255
 7b6:	08 95       	ret

000007b8 <__mulsf3>:
 7b8:	0b d0       	rcall	.+22     	; 0x7d0 <__mulsf3x>
 7ba:	c0 cf       	rjmp	.-128    	; 0x73c <__fp_round>
 7bc:	b1 df       	rcall	.-158    	; 0x720 <__fp_pscA>
 7be:	28 f0       	brcs	.+10     	; 0x7ca <__mulsf3+0x12>
 7c0:	b6 df       	rcall	.-148    	; 0x72e <__fp_pscB>
 7c2:	18 f0       	brcs	.+6      	; 0x7ca <__mulsf3+0x12>
 7c4:	95 23       	and	r25, r21
 7c6:	09 f0       	breq	.+2      	; 0x7ca <__mulsf3+0x12>
 7c8:	7d cf       	rjmp	.-262    	; 0x6c4 <__fp_inf>
 7ca:	82 cf       	rjmp	.-252    	; 0x6d0 <__fp_nan>
 7cc:	11 24       	eor	r1, r1
 7ce:	ea cf       	rjmp	.-44     	; 0x7a4 <__fp_szero>

000007d0 <__mulsf3x>:
 7d0:	c6 df       	rcall	.-116    	; 0x75e <__fp_split3>
 7d2:	a0 f3       	brcs	.-24     	; 0x7bc <__mulsf3+0x4>

000007d4 <__mulsf3_pse>:
 7d4:	95 9f       	mul	r25, r21
 7d6:	d1 f3       	breq	.-12     	; 0x7cc <__mulsf3+0x14>
 7d8:	95 0f       	add	r25, r21
 7da:	50 e0       	ldi	r21, 0x00	; 0
 7dc:	55 1f       	adc	r21, r21
 7de:	62 9f       	mul	r22, r18
 7e0:	f0 01       	movw	r30, r0
 7e2:	72 9f       	mul	r23, r18
 7e4:	bb 27       	eor	r27, r27
 7e6:	f0 0d       	add	r31, r0
 7e8:	b1 1d       	adc	r27, r1
 7ea:	63 9f       	mul	r22, r19
 7ec:	aa 27       	eor	r26, r26
 7ee:	f0 0d       	add	r31, r0
 7f0:	b1 1d       	adc	r27, r1
 7f2:	aa 1f       	adc	r26, r26
 7f4:	64 9f       	mul	r22, r20
 7f6:	66 27       	eor	r22, r22
 7f8:	b0 0d       	add	r27, r0
 7fa:	a1 1d       	adc	r26, r1
 7fc:	66 1f       	adc	r22, r22
 7fe:	82 9f       	mul	r24, r18
 800:	22 27       	eor	r18, r18
 802:	b0 0d       	add	r27, r0
 804:	a1 1d       	adc	r26, r1
 806:	62 1f       	adc	r22, r18
 808:	73 9f       	mul	r23, r19
 80a:	b0 0d       	add	r27, r0
 80c:	a1 1d       	adc	r26, r1
 80e:	62 1f       	adc	r22, r18
 810:	83 9f       	mul	r24, r19
 812:	a0 0d       	add	r26, r0
 814:	61 1d       	adc	r22, r1
 816:	22 1f       	adc	r18, r18
 818:	74 9f       	mul	r23, r20
 81a:	33 27       	eor	r19, r19
 81c:	a0 0d       	add	r26, r0
 81e:	61 1d       	adc	r22, r1
 820:	23 1f       	adc	r18, r19
 822:	84 9f       	mul	r24, r20
 824:	60 0d       	add	r22, r0
 826:	21 1d       	adc	r18, r1
 828:	82 2f       	mov	r24, r18
 82a:	76 2f       	mov	r23, r22
 82c:	6a 2f       	mov	r22, r26
 82e:	11 24       	eor	r1, r1
 830:	9f 57       	subi	r25, 0x7F	; 127
 832:	50 40       	sbci	r21, 0x00	; 0
 834:	8a f0       	brmi	.+34     	; 0x858 <__mulsf3_pse+0x84>
 836:	e1 f0       	breq	.+56     	; 0x870 <__mulsf3_pse+0x9c>
 838:	88 23       	and	r24, r24
 83a:	4a f0       	brmi	.+18     	; 0x84e <__mulsf3_pse+0x7a>
 83c:	ee 0f       	add	r30, r30
 83e:	ff 1f       	adc	r31, r31
 840:	bb 1f       	adc	r27, r27
 842:	66 1f       	adc	r22, r22
 844:	77 1f       	adc	r23, r23
 846:	88 1f       	adc	r24, r24
 848:	91 50       	subi	r25, 0x01	; 1
 84a:	50 40       	sbci	r21, 0x00	; 0
 84c:	a9 f7       	brne	.-22     	; 0x838 <__mulsf3_pse+0x64>
 84e:	9e 3f       	cpi	r25, 0xFE	; 254
 850:	51 05       	cpc	r21, r1
 852:	70 f0       	brcs	.+28     	; 0x870 <__mulsf3_pse+0x9c>
 854:	37 cf       	rjmp	.-402    	; 0x6c4 <__fp_inf>
 856:	a6 cf       	rjmp	.-180    	; 0x7a4 <__fp_szero>
 858:	5f 3f       	cpi	r21, 0xFF	; 255
 85a:	ec f3       	brlt	.-6      	; 0x856 <__mulsf3_pse+0x82>
 85c:	98 3e       	cpi	r25, 0xE8	; 232
 85e:	dc f3       	brlt	.-10     	; 0x856 <__mulsf3_pse+0x82>
 860:	86 95       	lsr	r24
 862:	77 95       	ror	r23
 864:	67 95       	ror	r22
 866:	b7 95       	ror	r27
 868:	f7 95       	ror	r31
 86a:	e7 95       	ror	r30
 86c:	9f 5f       	subi	r25, 0xFF	; 255
 86e:	c1 f7       	brne	.-16     	; 0x860 <__mulsf3_pse+0x8c>
 870:	fe 2b       	or	r31, r30
 872:	88 0f       	add	r24, r24
 874:	91 1d       	adc	r25, r1
 876:	96 95       	lsr	r25
 878:	87 95       	ror	r24
 87a:	97 f9       	bld	r25, 7
 87c:	08 95       	ret
 87e:	11 f4       	brne	.+4      	; 0x884 <__mulsf3_pse+0xb0>
 880:	0e f4       	brtc	.+2      	; 0x884 <__mulsf3_pse+0xb0>
 882:	26 cf       	rjmp	.-436    	; 0x6d0 <__fp_nan>
 884:	3e c0       	rjmp	.+124    	; 0x902 <__fp_mpack>

00000886 <sqrt>:
 886:	73 df       	rcall	.-282    	; 0x76e <__fp_splitA>
 888:	d0 f3       	brcs	.-12     	; 0x87e <__mulsf3_pse+0xaa>
 88a:	99 23       	and	r25, r25
 88c:	d9 f3       	breq	.-10     	; 0x884 <__mulsf3_pse+0xb0>
 88e:	ce f3       	brts	.-14     	; 0x882 <__mulsf3_pse+0xae>
 890:	9f 57       	subi	r25, 0x7F	; 127
 892:	55 0b       	sbc	r21, r21
 894:	87 ff       	sbrs	r24, 7
 896:	43 d0       	rcall	.+134    	; 0x91e <__fp_norm2>
 898:	00 24       	eor	r0, r0
 89a:	a0 e6       	ldi	r26, 0x60	; 96
 89c:	40 ea       	ldi	r20, 0xA0	; 160
 89e:	90 01       	movw	r18, r0
 8a0:	80 58       	subi	r24, 0x80	; 128
 8a2:	56 95       	lsr	r21
 8a4:	97 95       	ror	r25
 8a6:	28 f4       	brcc	.+10     	; 0x8b2 <sqrt+0x2c>
 8a8:	80 5c       	subi	r24, 0xC0	; 192
 8aa:	66 0f       	add	r22, r22
 8ac:	77 1f       	adc	r23, r23
 8ae:	88 1f       	adc	r24, r24
 8b0:	20 f0       	brcs	.+8      	; 0x8ba <sqrt+0x34>
 8b2:	26 17       	cp	r18, r22
 8b4:	37 07       	cpc	r19, r23
 8b6:	48 07       	cpc	r20, r24
 8b8:	30 f4       	brcc	.+12     	; 0x8c6 <sqrt+0x40>
 8ba:	62 1b       	sub	r22, r18
 8bc:	73 0b       	sbc	r23, r19
 8be:	84 0b       	sbc	r24, r20
 8c0:	20 29       	or	r18, r0
 8c2:	31 29       	or	r19, r1
 8c4:	4a 2b       	or	r20, r26
 8c6:	a6 95       	lsr	r26
 8c8:	17 94       	ror	r1
 8ca:	07 94       	ror	r0
 8cc:	20 25       	eor	r18, r0
 8ce:	31 25       	eor	r19, r1
 8d0:	4a 27       	eor	r20, r26
 8d2:	58 f7       	brcc	.-42     	; 0x8aa <sqrt+0x24>
 8d4:	66 0f       	add	r22, r22
 8d6:	77 1f       	adc	r23, r23
 8d8:	88 1f       	adc	r24, r24
 8da:	20 f0       	brcs	.+8      	; 0x8e4 <sqrt+0x5e>
 8dc:	26 17       	cp	r18, r22
 8de:	37 07       	cpc	r19, r23
 8e0:	48 07       	cpc	r20, r24
 8e2:	30 f4       	brcc	.+12     	; 0x8f0 <sqrt+0x6a>
 8e4:	62 0b       	sbc	r22, r18
 8e6:	73 0b       	sbc	r23, r19
 8e8:	84 0b       	sbc	r24, r20
 8ea:	20 0d       	add	r18, r0
 8ec:	31 1d       	adc	r19, r1
 8ee:	41 1d       	adc	r20, r1
 8f0:	a0 95       	com	r26
 8f2:	81 f7       	brne	.-32     	; 0x8d4 <sqrt+0x4e>
 8f4:	b9 01       	movw	r22, r18
 8f6:	84 2f       	mov	r24, r20
 8f8:	91 58       	subi	r25, 0x81	; 129
 8fa:	88 0f       	add	r24, r24
 8fc:	96 95       	lsr	r25
 8fe:	87 95       	ror	r24
 900:	08 95       	ret

00000902 <__fp_mpack>:
 902:	9f 3f       	cpi	r25, 0xFF	; 255
 904:	31 f0       	breq	.+12     	; 0x912 <__fp_mpack_finite+0xc>

00000906 <__fp_mpack_finite>:
 906:	91 50       	subi	r25, 0x01	; 1
 908:	20 f4       	brcc	.+8      	; 0x912 <__fp_mpack_finite+0xc>
 90a:	87 95       	ror	r24
 90c:	77 95       	ror	r23
 90e:	67 95       	ror	r22
 910:	b7 95       	ror	r27
 912:	88 0f       	add	r24, r24
 914:	91 1d       	adc	r25, r1
 916:	96 95       	lsr	r25
 918:	87 95       	ror	r24
 91a:	97 f9       	bld	r25, 7
 91c:	08 95       	ret

0000091e <__fp_norm2>:
 91e:	91 50       	subi	r25, 0x01	; 1
 920:	50 40       	sbci	r21, 0x00	; 0
 922:	66 0f       	add	r22, r22
 924:	77 1f       	adc	r23, r23
 926:	88 1f       	adc	r24, r24
 928:	d2 f7       	brpl	.-12     	; 0x91e <__fp_norm2>
 92a:	08 95       	ret

0000092c <_exit>:
 92c:	f8 94       	cli

0000092e <__stop_program>:
 92e:	ff cf       	rjmp	.-2      	; 0x92e <__stop_program>
